Afl.print("Fuzzing with AFL in FRIDA mode");


const cm = new CModule(`
	#include <string.h>
	#include <gum/gumdefs.h>

	void afl_persistent_hook(GumCpuContext *regs, uint8_t *input_buf, uint32_t length){

		memcpy((void *)regs->rdi, input_buf, length);
		regs->rsi = length;
	}
	`,
	{
		memcpy: Module.getExportByName(null, "memcpy")
	}
);

const pTargetAddr = DebugSymbol.fromName("fuzz_one_input").address;

Afl.setEntryPoint(pTargetAddr);
Afl.setPersistentHook(cm.afl_persistent_hook);
Afl.setPersistentAddress(pTargetAddr);
Afl.setPersistentCount(10000);
//Afl.setInMemoryFuzzing();

Afl.done();
Afl.print("[*] All done!");


